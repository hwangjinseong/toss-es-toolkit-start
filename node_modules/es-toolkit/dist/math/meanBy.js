"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/math/meanBy.ts
var meanBy_exports = {};
__export(meanBy_exports, {
  meanBy: () => meanBy
});
module.exports = __toCommonJS(meanBy_exports);

// src/math/sum.ts
function sum(nums) {
  let result = 0;
  for (const num of nums) {
    result += num;
  }
  return result;
}

// src/math/mean.ts
function mean(nums) {
  return sum(nums) / nums.length;
}

// src/math/meanBy.ts
function meanBy(items, getValue) {
  const nums = items.map((x) => getValue(x));
  return mean(nums);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  meanBy
});
//# sourceMappingURL=meanBy.js.map
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/array/orderBy.ts
var orderBy_exports = {};
__export(orderBy_exports, {
  orderBy: () => orderBy
});
module.exports = __toCommonJS(orderBy_exports);
function orderBy(collection, keys, orders) {
  const compareValues = (a, b, order) => {
    if (a < b) {
      return order === "asc" ? -1 : 1;
    }
    if (a > b) {
      return order === "asc" ? 1 : -1;
    }
    return 0;
  };
  const effectiveOrders = keys.map((_, index) => orders[index] || orders[orders.length - 1]);
  return collection.slice().sort((a, b) => {
    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      const order = effectiveOrders[i];
      const result = compareValues(a[key], b[key], order);
      if (result !== 0) {
        return result;
      }
    }
    return 0;
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  orderBy
});
//# sourceMappingURL=orderBy.js.map